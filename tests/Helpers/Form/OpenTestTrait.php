<?php
declare(strict_types=1);

namespace Tests\Helpers\Form;

use Fyre\Security\CsrfProtection;
use Fyre\Utility\HtmlHelper;

use function password_verify;
use function preg_match;

trait OpenTestTrait
{

    public function testOpen(): void
    {
        $this->assertSame(
            '<form action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open()
        );
    }

    public function testOpenAction(): void
    {
        $this->assertSame(
            '<form action="/test/test-method" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'action' => '/test/test-method'
            ])
        );
    }

    public function testOpenActionArray(): void
    {
        $this->assertSame(
            '<form action="/test/test-method" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'action' => [
                    'controller' => 'Test',
                    'action' => 'testMethod'
                ]
            ])
        );
    }

    public function testOpenCharset(): void
    {
        HtmlHelper::setCharset('ISO-8859-1');

        $this->assertSame(
            '<form action="/test" method="post" charset="ISO-8859-1">',
            $this->view->Form->open()
        );
    }

    public function testOpenAttributes(): void
    {
        $this->assertSame(
            '<form class="test" id="form" action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'class' => 'test',
                'id' => 'form'
            ])
        );
    }

    public function testOpenAttributesOrder(): void
    {
        $this->assertSame(
            '<form class="test" id="form" action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'id' => 'form',
                'class' => 'test'
            ])
        );
    }

    public function testOpenAttributeInvalid(): void
    {
        $this->assertSame(
            '<form class="test" action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                '*class*' => 'test'
            ])
        );
    }

    public function testOpenAttributeEscape(): void
    {
        $this->assertSame(
            '<form data-test="&lt;test&gt;" action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'data-test' => '<test>'
            ])
        );
    }

    public function testOpenAttributeArray(): void
    {
        $this->assertSame(
            '<form data-test="[1,2]" action="/test" method="post" charset="UTF-8">',
            $this->view->Form->open(null, [
                'data-test' => [1, 2]
            ])
        );
    }

    public function testOpenCsrf(): void
    {
        CsrfProtection::enable();
        $open = $this->view->Form->open();

        preg_match('/^<form action="\/test" method="post" charset="UTF-8"><input name="csrf_token" type="hidden" value="(.*)" \/>$/', $open, $match);

        $token = CsrfProtection::getToken();
        $userToken = $match[1];

        $this->assertTrue(
            password_verify($token, $userToken)
        );
    }

}
